name: Build model-conductor image

on: push
env:
  IMAGE_NAME: model-conductor

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'

      - name: Set up Bundler with GitHub Packages
        env:
          BUNDLE_RUBYGEMS__PKG__GITHUB__COM: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          bundle config set --local BUNDLE_RUBYGEMS__PKG__GITHUB__COM $BUNDLE_RUBYGEMS__PKG__GITHUB__COM
          bundle install

      - name: Run RuboCop
        run: bundle exec rake rubocop

  build_and_push:
    needs: lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          secrets: |
            "ghp_credential=${{ github.repository_owner }}:${{ secrets.GITHUB_TOKEN }}"

  delete_old_container_images:
    needs: build_and_push
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Delete old container images
        uses: actions/delete-package-versions@v4
        with:
          package-name: ${{ env.IMAGE_NAME }}
          package-type: 'container'
          min-versions-to-keep: 10
          delete-only-untagged-versions: 'true'
